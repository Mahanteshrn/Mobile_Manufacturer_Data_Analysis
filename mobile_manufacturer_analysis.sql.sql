--SQL Advance Case Study

USE db_SQLCaseStudies;

--Q1--BEGIN 

SELECT Customer_Name, [State], YEAR(Date) AS [Year] FROM DIM_LOCATION AS DL 
INNER JOIN 
FACT_TRANSACTIONS AS FT 
ON DL.IDLocation=FT.IDLocation INNER JOIN DIM_CUSTOMER AS DC ON 
FT.IDCustomer=DC.IDCustomer WHERE YEAR(DATE) BETWEEN '2005' AND YEAR(GETDATE())	;

--Q1--END

--Q2--BEGIN

SELECT Top 1 Country, [State], Manufacturer_Name,  COUNT(Manufacturer_Name) AS MAX_Sales 
FROM DIM_LOCATION AS DL INNER JOIN FACT_TRANSACTIONS AS FT ON DL.IDLocation=FT.IDLocation 
INNER JOIN DIM_MODEL AS DM ON FT.IDModel=DM.IDModel
INNER JOIN DIM_MANUFACTURER AS DMR ON DM.IDManufacturer=DMR.IDManufacturer 
WHERE Country='US' and Manufacturer_Name='Samsung' GROUP BY [State], Country, Manufacturer_Name 
order by MAX_Sales DESC;

--Q2--END

--Q3--BEGIN   
   
SELECT DM.IDModel, Model_Name, ZipCode, [State], COUNT(TotalPrice) AS Number_of_Transactions 
FROM FACT_TRANSACTIONS AS FT 
LEFT JOIN DIM_LOCATION AS DL 
ON FT.IDLocation=DL.IDLocation 
LEFT JOIN DIM_MODEL AS DM 
ON FT.IDModel=DM.IDModel group by Model_Name, ZipCode, [State], DM.IDModel;

--Q3--END

--Q4--BEGIN

SELECT TOP 1 Model_Name, MIN(Unit_price) AS Price FROM DIM_MODEL GROUP BY Model_Name ORDER BY Price ASC;

--Q4--END

--Q5--BEGIN

SELECT top 5 Manufacturer_Name, model_name, 
COUNT(Quantity) as Total_Sale_Quantity, AVG(unit_price) as AVG_Price 
FROM FACT_TRANSACTIONS AS FT INNER JOIN DIM_MODEL AS DM ON FT.IDModel=DM.IDModel 
INNER JOIN DIM_MANUFACTURER AS DMR ON DM.IDManufacturer=DMR.IDManufacturer GROUP BY
Manufacturer_Name, model_name order by Total_Sale_Quantity desc , AVG_Price asc;

--Q5--END

--Q6--BEGIN

SELECT Customer_Name, [Date], AVG(TOTALPRICE) AS AVG_Amount FROM DIM_CUSTOMER AS DM 
LEFT JOIN FACT_TRANSACTIONS AS FT ON DM.IDCustomer=FT.IDCustomer 
WHERE YEAR([Date]) = '2009' GROUP BY [Date], Customer_Name HAVING AVG(TOTALPRICE) > 500; 

--Q6--END
	
--Q7--BEGIN 
 
SELECT MODEL_NAME, COUNT(MODEL_NAME) AS Number_of_Times FROM 
   (SELECT * FROM (SELECT RANK() OVER(ORDER BY SUM(QUANTITY) DESC) AS RNU,  Model_Name, SUM(QUANTITY) 
   AS Total_Quantity FROM FACT_TRANSACTIONS AS FT INNER JOIN DIM_MODEL AS DM ON FT.IDModel=DM.IDModel	
   WHERE YEAR([Date]) IN ('2008') GROUP BY Model_Name
   INTERSECT
   SELECT RANK() OVER(ORDER BY SUM(QUANTITY) DESC) AS RNU,  Model_Name, SUM(QUANTITY) 
   AS Total_Quantity FROM FACT_TRANSACTIONS AS FT INNER JOIN DIM_MODEL AS DM ON FT.IDModel=DM.IDModel	
   WHERE YEAR([Date]) IN ('2009') GROUP BY Model_Name
   INTERSECT
   SELECT RANK() OVER(ORDER BY SUM(QUANTITY) DESC) AS RNU,  Model_Name, SUM(QUANTITY) 
   AS Total_Quantity FROM FACT_TRANSACTIONS AS FT INNER JOIN DIM_MODEL AS DM ON FT.IDModel=DM.IDModel	
   WHERE YEAR([Date]) IN ('2010') GROUP BY Model_Name) AS T1 WHERE RNU <= 5 ) 
AS T2 GROUP BY MODEL_NAME HAVING COUNT(MODEL_NAME) >= 3;

--Q7--END	

--Q8--BEGIN

SELECT*FROM (select ROW_NUMBER() OVER(ORDER BY sum(totalprice) DESC) AS RNUM, Manufacturer_Name, 
sum(totalprice) AS Total_sales from 
DIM_MANUFACTURER AS DMR 
LEFT JOIN 
DIM_MODEL AS DM ON DMR.IDManufacturer=DM.IDManufacturer 
LEFT JOIN 
FACT_TRANSACTIONS AS FT ON DM.IDModel=FT.IDModel WHERE YEAR(DATE) IN ('2009', '2010') GROUP BY Manufacturer_Name) 
AS T1 WHERE RNUM=2;

--Q8--END

--Q9--BEGIN

SELECT Manufacturer_Name, '2009' AS NOT_SLOD_IN, '2010' AS SLOD_IN  FROM (SELECT Manufacturer_Name 
FROM DIM_MANUFACTURER AS DMR INNER JOIN DIM_MODEL AS DM 
ON DMR.IDManufacturer=DM.IDManufacturer INNER JOIN FACT_TRANSACTIONS AS FT ON FT.IDModel=DM.IDModel WHERE 
YEAR([DATE]) = '2010'
EXCEPT
SELECT Manufacturer_Name FROM DIM_MANUFACTURER AS DMR INNER JOIN DIM_MODEL AS DM 
ON DMR.IDManufacturer=DM.IDManufacturer INNER JOIN FACT_TRANSACTIONS AS FT ON FT.IDModel=DM.IDModel WHERE 
YEAR([DATE]) = '2009') AS T1

--Q9--END

--Q10--BEGIN

WITH CTE AS (SELECT top 100 ROW_NUMBER() OVER (ORDER BY DATE) AS RNUM, [Date] , CU.IDCustomer, CUSTOMER_NAME, AVG(TOTALPRICE) AS AVG_SPEND, 
AVG(QUANTITY) AS AVG_QUANTITY  FROM 
DIM_CUSTOMER AS CU LEFT JOIN FACT_TRANSACTIONS AS FT ON CU.IDCustomer=FT.IDCustomer GROUP BY [Date] , CU.IDCustomer, CUSTOMER_NAME)  
SELECT T5.RNUM, T5.Date, T5.IDCustomer, T5.Customer_Name, T5.AVG_QUANTITY, T5.AVG_SPEND,
(T5.AVG_SPEND - T6.AVG_SPEND)*1.0/T6.AVG_SPEND*100 as [Percentage of change in spend]
FROM CTE AS T5
LEFT JOIN CTE AS T6 ON T5.RNUM=T6.RNUM+1;

--Q10--END
	